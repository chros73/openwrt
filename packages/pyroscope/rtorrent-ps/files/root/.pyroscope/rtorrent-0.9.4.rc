#############################################################################
# Standard PyroScope rTorrent Configuration
#
# Include this into your main "~/.rtorrent.rc" for 0.8.6 by adding...
#   system.method.insert = pyro.extended, value|const, 0
#   system.method.insert = pyro.bin_dir, string|const,
#   system.method.insert = pyro.rtorrent_rc, string|const|private, "$cat=~/.pyroscope/rtorrent-,\"$system.client_version=\",.rc.default"
#   import = $pyro.rtorrent_rc=
#
# For 0.8.8 and up, use "method.insert" instead.
#
# Remove the ".default" if you want to change something (else your
# changes get over-written on update).
#
# Set "pyro.extended" to 1 to activate rTorrent-PS features, but ONLY if
# you actually run that patched version of rTorrent!
#
# Things marked with ♯087♯ are for version 0.8.7+ only (the migration script
# reacts on that)!
#

# Log extension switch setting
branch=pyro.extended=,print=rTorrent-PS\\\ features\\\ active!,print=rTorrent-PS\\\ features\\\ NOT\\\ active!

# COMMAND: Return startup time (can be used to calculate uptime)
system.method.insert = startup_time,value|const,$system.time=

# EVENTS: Timestamps
#   tm_loaded = time loaded into client
#   tm_started = time of *first* start
#   tm_completed = time of completion
system.method.insert = pyro.tm_started.now,simple|private,"d.set_custom=tm_started,$cat=$system.time= ;d.save_full_session="
system.method.set_key = event.download.resumed,time_stamp,"branch=d.get_custom=tm_started,false=,pyro.tm_started.now="
system.method.set_key = event.download.inserted_new,time_stamp,"d.set_custom=tm_loaded,$cat=$system.time= ;d.save_full_session="
system.method.set_key = event.download.finished,time_stamp,"d.set_custom=tm_completed,$cat=$system.time= ;d.save_full_session="

## EVENTS: Activation intervals
#system.method.insert = pyro.activations.append,simple|private,"d.set_custom=activations,\"$cat=$d.get_custom=activations,$argument.0=,$system.time=\" ;d.save_full_session="
#system.method.set_key = event.download.paused,activations,"pyro.activations.append=P"
#system.method.set_key = event.download.resumed,activations,"pyro.activations.append=R"

## SCHEDULE: Set "last_active" custom field for items that have peers
#system.method.insert = d.last_active, simple|value, "if=$d.peers_connected=,$cat=$system.time=,$d.custom=last_active"
#schedule = update_last_active,24,42,"d.multicall=started,\"branch=$d.peers_connected=,\\\"d.custom.set=last_active,$cat=$system.time=\\\"\""
#system.method.insert = d.last_active.print, simple|private, "print=\"$cat={$convert.date=$d.last_active=, \\\" \\\", $convert.time=$d.last_active=}\""
#system.method.set_key = event.download.resumed,last_active,"d.set_custom=last_active,$cat=$system.time= ;d.save_full_session="
#system.method.set_key = event.download.finished,last_active,"d.set_custom=last_active,$cat=$system.time= ;d.save_full_session="

# UI/VIEW: Show current messages (bound to '!' in rT-PS)
view_add = messages
view_filter = messages,d.get_message=
branch=pyro.extended=,false=,"view_sort_current = messages,less=d.get_message="
branch=pyro.extended=,"view_sort_current = messages,\"compare=,d.get_message=,d.get_name=\""
system.method.insert = ui.messages.show,simple,"ui.current_view.set=messages ;view_filter=messages,d.get_message= ;view_sort=messages ;print=$view.size=messages,\" message(s)!\""
branch=pyro.extended=,"schedule = bind_messages,0,0,\"ui.bind_key=download_list,!,ui.messages.show=\""

# UI/VIEW: Trackers (all items, sorted by tracker domain and name) (bound to 't' in rT-PS)
#          This will ONLY work if you use rT-PS!
branch=pyro.extended=,"view_add = trackers"
branch=pyro.extended=,"view.collapsed.toggle = trackers"
branch=pyro.extended=,"view_sort_new     = trackers,\"compare=,d.tracker_domain=,d.get_name=\""
branch=pyro.extended=,"view_sort_current = trackers,\"compare=,d.tracker_domain=,d.get_name=\""
branch=pyro.extended=,"schedule = bind_trackers,0,0,\"ui.bind_key=download_list,t,ui.current_view.set=trackers\""

# UI/VIEW: Manually tag (select) items
# . = toggle focused item between tagged and untagged
# T = clear all tags
# : = show tagged items view
view_add = tagged
view.persistent = tagged
branch=pyro.extended=,view.collapsed.toggle=tagged
system.method.insert = view.toggle_visible,simple,"branch=d.views.has=$argument.0=,view.set_not_visible=$argument.0=,view.set_visible=$argument.0="
system.method.insert = pyro.view_tagged_clear,simple|private,"view.filter=tagged,false= ;d.multicall=main,d.views.remove=tagged"
branch=pyro.extended=,"schedule = bind_tag_toggle,0,0,\"ui.bind_key=download_list,.,view.toggle_visible=tagged\""
branch=pyro.extended=,"schedule = bind_tag_clear,0,0,\"ui.bind_key=download_list,T,pyro.view_tagged_clear=\""
branch=pyro.extended=,"schedule = bind_tag_show,0,0,\"ui.bind_key=download_list,:,ui.current_view.set=tagged\""

# UI/VIEW: Bind "*" to toggle between collapsed and expanded display
branch=pyro.extended=,"schedule = bind_collapsed,0,0,\"ui.bind_key=download_list,*,view.collapsed.toggle=\""

# UI/VIEW: Show active and incomplete torrents (in view #0) and update every 20 seconds
# Items are grouped into complete, incomplete, and queued, in that order.
# Within each group, they're sorted by download and then upload speed.
branch=pyro.extended=,false=,"view.sort_current = active,greater=d.up.rate="
branch=pyro.extended=,"view.sort_current = active,\"compare=----,d.is_open=,d.complete=,d.down.rate=,d.up.rate=\""
schedule = filter_active,12,20,"view.filter = active,\"or={d.up.rate=,d.down.rate=,not=$d.complete=}\" ;view.sort=active"

# UI/VIEW: SORT torrents by UPLOADED DATA (bound to 'L' in rT-PS)
view_add = uploadeddata
view.sort_current = uploadeddata,greater=d.get_up_total=
view.sort_new = uploadeddata,less=d.get_up_total=
view.sort = uploadeddata
branch=pyro.extended=,"schedule = bind_uploadeddata,0,0,\"ui.bind_key=download_list,L,ui.current_view.set=uploadeddata\""

## UI/VIEW: Default view for filtering results (bound to '^' key in rT-PS)
#view_add = rtcontrol
#view_filter = rtcontrol,false=
#branch=pyro.extended=,"schedule = bind_rtcontrol,0,0,\"ui.bind_key=download_list,^,ui.current_view.set=rtcontrol\""

## UI/CMD: Use rtcontrol filter (^X s=KEYWORD, ^X t=TRACKER, ^X f="FILTER")
#system.method.insert = s,simple|private,"execute_nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,\"$cat=*,$argument.0=,*\""
#system.method.insert = t,simple|private,"execute_nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,\"$cat=\\\"alias=\\\",$argument.0=\""
#system.method.insert = f,simple|private,"execute_nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",--detach,-qV,$argument.0="

## UI/CMD: Housekeeping (delete item + data)
#system.method.insert = purge,simple|private,"execute_nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",-q,--detach,--purge,--yes,\"$cat=hash=,$d.get_hash=\""
#system.method.insert = cull,simple|private,"execute_nothrow=\"$cat=$pyro.bin_dir=,rtcontrol\",-q,--detach,--cull,--yes,\"$cat=hash=,$d.get_hash=\""

## UI/VIEW: Show traffic of the last hour (bound to '=' key in rT-PS)
#network.history.depth.set = 112
#schedule = network_history_sampling,1,32, network.history.sample=
#method.insert = network.history.auto_scale.toggle, simple|private, "branch=network.history.auto_scale=,\"network.history.auto_scale.set=0\",\"network.history.auto_scale.set=1\""
#method.insert = network.history.auto_scale.ui_toggle, simple|private, "network.history.auto_scale.toggle= ;network.history.refresh="
#branch=pyro.extended=,"schedule = bind_auto_scale,0,0,\"ui.bind_key=download_list,=,network.history.auto_scale.ui_toggle=\""

## TORQUE: View for queue manager job (bound to 'Q' key in rT-PS)
## (this is not the buggy internal scheduler controlled by scheduler.max_active)
#view_add = pyrotorque
#view_filter = pyrotorque,false=
#schedule = filter_pyrotorque,1,15,"view_filter = pyrotorque,\"or={d.get_up_rate=,d.get_down_rate=,d.get_peers_connected=,not=$d.get_complete=}\""
#branch=pyro.extended=,"schedule = bind_pyrotorque,0,0,\"ui.bind_key=download_list,Q,ui.current_view.set=pyrotorque\""

## TORQUE: Daemon watchdog
#system.method.insert = pyro.watchdog,simple|private,"execute_nothrow=bash,-c,\"$cat=\\\"test ! -f \\\",$argument.0=,\\\"/run/pyrotorque || \\\",$pyro.bin_dir=,\\\"pyrotorque --cron \\\",$argument.1=\""
